{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","title","completed","cn","TodoList","todos","map","username","todosWithUsers","userId","usersFromServer","find","usr","App","useState","toDoList","setToDoList","setTitle","titleError","setTitleError","setUserId","userError","setUserError","action","method","onSubmit","event","preventDefault","prevToDoList","Math","max","type","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c729714.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { ToDo } from '../../types/ToDo';\n\ninterface Props {\n  todo: ToDo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { ToDo } from '../../types/ToDo';\n\ninterface Props {\n  todos: ToDo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { ToDo } from './types/ToDo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst todosWithUsers = todosFromServer.map(todo => {\n  const user = usersFromServer.find(usr => usr.id === todo.userId);\n\n  return {\n    ...todo,\n    user,\n  };\n});\n\nexport const App: React.FC = () => {\n  const [toDoList, setToDoList] = useState<ToDo[]>(todosWithUsers);\n\n  const [title, setTitle] = useState<string>('');\n  const [titleError, setTitleError] = useState<boolean>(false);\n\n  const [userId, setUserId] = useState<number>(0);\n  const [userError, setUserError] = useState<boolean>(false);\n\n  const getNextId = () => Math.max(...toDoList.map(todo => todo.id)) + 1;\n\n  const resetForm = () => {\n    setTitle('');\n    setTitleError(false);\n\n    setUserId(0);\n    setUserError(false);\n  };\n\n  const formSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const user = usersFromServer.find(usr => usr.id === userId);\n\n    setTitleError(!title);\n    setUserError(!userId);\n\n    if (!userId || !title) {\n      return;\n    }\n\n    setToDoList(prevToDoList => [\n      ...prevToDoList,\n      {\n        id: getNextId(),\n        title,\n        userId,\n        completed: false,\n        user,\n      },\n    ]);\n\n    resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={formSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Title\"\n              value={title}\n              onChange={event => {\n                setTitle(event.target.value);\n                setTitleError(false);\n              }}\n            />\n          </label>\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={event => {\n                setUserId(+event.target.value);\n                setUserError(false);\n              }}\n            >\n              <option value=\"0\">Choose a user</option>\n              {usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={toDoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}